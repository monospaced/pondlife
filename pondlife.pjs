/* @pjs transparent=true; */

float radius = 25.0;
float border = 3.0;
float speed = 2;
float spring = 0.05;

float winWidth = window.innerWidth;
float winHeight = window.innerHeight;

int numBalls = 7;
Ball[] balls = new Ball[numBalls];

void setup() {
  size(winWidth,winHeight);
  frameRate(15);
  var x,
    y,
    gutter = radius+border;
    minDist = gutter*2,
    w = width-gutter,
    h = height-gutter;
  for (int i = 0; i < numBalls; i++) {
  x = random(gutter,w);
    y = random(gutter,h);
  for (int n = 0; n < numBalls; n++) {
    var d = balls[n],
      dx = d.x,
      dy = d.y;
    float distance = sqrt((dx-x)*(dx-x) + (dy-y)*(dy-y));
      if (distance < minDist) {
      if (dx+minDist > w) {
        x = dx-minDist;
      } else {
        x = dx+minDist;
      }
      if (dy+minDist > h) {
        y = dy-minDist;
      } else {
        y = dy+minDist;
      }
    }
  }
    balls[i] = new Ball(x, y, radius*2, i, balls);
  }
}

void draw() {
  var currentWidth = window.innerWidth;
  if (currentWidth != winWidth) {
  size(currentWidth,winHeight);
  }
  strokeWeight(border);
  background(0,0);
  for (int i = 0; i < numBalls; i++) {
  balls[i].collide();
  balls[i].move();
    balls[i].display();
  }
}

class Ball {

  float x, y;
  float diameter, breath;
  float vx = random(-speed,speed);
  float vy = random(-speed,speed);
  int id;
  Ball[] others;

  Ball(float xin, float yin, float din, int idin, Ball[] oin) {
    x = xin;
    y = yin;
    diameter = din;
    id = idin;
    others = oin;
  }

  void collide() {
    for (int i = id + 1; i < numBalls; i++) {
      float dx = others[i].x - x;
      float dy = others[i].y - y;
      float distance = sqrt(dx*dx + dy*dy);
      float minDist = others[i].diameter/2 + diameter/2;
      if (distance < minDist) {
        float angle = atan2(dy, dx);
        float targetX = x + cos(angle) * minDist;
        float targetY = y + sin(angle) * minDist;
        float ax = (targetX - others[i].x) * spring;
        float ay = (targetY - others[i].y) * spring;
        vx -= ax;
        vy -= ay;
        others[i].vx += ax;
        others[i].vy += ay;
      }
    }
  }

  void move() {
    x += vx;
    y += vy;
    if (x + diameter/2 > width) {
      x = width - diameter/2;
      vx += -0.9;
    }
    else if (x - diameter/2 < 0) {
      x = diameter/2;
      vx *= -0.9;
    }
    if (y + diameter/2 > (height-1)) {
      y = (height-1) - diameter/2;
      vy *= -0.9;
    }
    else if (y - diameter/2 < 1) {
      y = (diameter/2) + 1;
      vy *= -0.9;
    }
  }

  void display() {
  breath = diameter + sin(frameCount/4);
  fill(0,0,0,0);
  stroke(51,153,201);
  ellipse(x,y,breath,breath);
  }

}
